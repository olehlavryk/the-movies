{"version":3,"sources":["components/RateSwitch/RateSwitch.js","components/Movie/Movie.js","store/selectors.js","components/Pagination/Pagination.js","components/PopUp/PopUp.js","config/config.js","api/Api.js","store/actions.js","pages/FavouriteMovies/FavouriteMovies.js","pages/TopRatedMovies/TopRatedMovies.js","pages/TVShows/TVShows.js","components/Icons/iconsConfig.js","components/Icons/Icon.js","components/Button/Button.js","components/ThemeButton/ThemeButton.js","components/NavBar/NavBar.js","components/App/App.js","store/initialState.js","store/reducer.js","store/store.js","index.js"],"names":["RateSwitch","popularity","useState","showRate","setShowRate","className","onClick","Movie","movie","openLink","title","poster_path","overview","alt","src","themeSelector","state","theme","moviesSelector","movies","loadingSelector","loading","currentPageSelector","currentPage","totalSelector","total","selectedMovieSelector","selectedMovie","Pagination","loadHandler","url","useSelector","prevButtonProps","disabled","nextButtonProps","PopoUp","releaseDate","closePopup","apiUrl","apiKey","this","imageUrl","headers","localStorageName","page","a","fetch","method","response","ok","Error","statusText","json","console","error","id","toggleTheme","createAction","setMovies","setLoadingTrue","setLoadingFalse","popupClose","selectMovie","fetchMoviesList","payload","dispatch","Api","fetchMovies","responce","FavouriteMovies","apiEndPoint","useDispatch","useEffect","handleGetMoviesByPage","handleSelectedMovie","map","release_date","TopRatedMovies","TVShows","alert","to","iconsConfig","sun","version","xmlns","x","y","viewBox","d","moon","Icon","name","props","IconC","Button","ThemeButton","handleToggleTheme","size","NavBar","App","React","createContext","Provider","basename","exact","path","initialState","reducer","createReducer","action","actions","results","total_pages","store","configureStore","preloadedState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4241f116.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./RateSwitch.css\";\nconst RateSwitch = ({ popularity }) => {\n    const [showRate, setShowRate] = useState(false);\n\n    if (!showRate) {\n        return (\n            <span className=\"rate-swicher\"\n                onClick={() => setShowRate(!showRate)}\n            >\n                Show Rate\n            </span>\n        )\n    }\n\n    return (\n        <div className=\"rate-wrapper\">\n            <span className=\"rate\">\n                Rate: {popularity}\n            </span>\n            <span className=\"rate-swicher\"\n                onClick={() => setShowRate(false)}\n            >\n                Hide Rate\n            </span>\n        </div>\n    )\n}\n\nexport default RateSwitch;","import React from \"react\";\nimport RateSwitch from \"../RateSwitch/RateSwitch\";\nimport \"./Movie.css\"\nconst Movie = ({ movie, openLink }) => {\n    const imageUrl = \"https://image.tmdb.org/t/p/w500\";\n    const { title, poster_path, overview, popularity } = movie;\n\n    return (\n        <article className=\"movie\">\n            <header className=\"movie-header\">\n                <img\n                    className=\"poster\"\n                    onClick={() => openLink(movie)}\n                    alt={title}\n                    src={imageUrl + poster_path}\n                />\n            </header>\n            <div className=\"movie-body\">\n                <h2 className=\"movie-title\">{title}</h2>\n                <p className=\"movie-overview\">\n                    {overview}\n                </p>\n                <RateSwitch {...{ popularity }} />\n            </div>\n        </article>\n    )\n}\n\nexport default Movie;","export const themeSelector = state => state.theme;\nexport const moviesSelector = state => state.movies;\nexport const loadingSelector = state => state.loading;\nexport const currentPageSelector = state => state.currentPage;\nexport const totalSelector = state => state.total;\nexport const selectedMovieSelector = state => state.selectedMovie;","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { currentPageSelector, themeSelector, totalSelector } from \"src/store/selectors\";\nimport \"./Pagination.css\";\n\nconst Pagination = ({ loadHandler, url }) => {\n    const theme = useSelector(themeSelector);\n    const currentPage = useSelector(currentPageSelector);\n    const total = useSelector(totalSelector);\n\n    const prevButtonProps = currentPage === 1 ? { disabled: \"disabled\" } : {};\n    const nextButtonProps = currentPage === total ? { disabled: \"disabled\" } : {};\n\n    return (\n        <div className={`pagination theme-${theme}`}>\n            <div>Current page {currentPage}</div>\n            <div className=\"btn-group\">\n                <button\n                    className=\"prevBtn\"\n                    onClick={() => loadHandler(`${url}&page=${currentPage - 1}`)}\n                    {...prevButtonProps}\n                >\n                    Previous page\n                    </button>\n                <button\n                    className=\"nextBtn\"\n                    onClick={() => loadHandler(`${url}&page=${currentPage + 1}`)}\n                    {...nextButtonProps}\n                >\n                    Next page\n                    </button>\n            </div>\n        </div>\n    )\n}\n\nexport default Pagination","import React from \"react\";\nimport \"./PopUp.css\";\n\nconst PopoUp = ({ releaseDate, closePopup }) => {\n\n    return (\n        <div className=\"modal\">\n            <span className=\"close\" onClick={closePopup}>&times;</span>\n            <strong>\n                Movie release date: {releaseDate}\n            </strong>\n        </div>\n    )\n}\n\nexport default PopoUp;","const apiUrl = \"https://api.themoviedb.org\";\nconst apiKey = \"8e3302447f2ef4cb9470023e800f1f03\";\n\nexport {\n    apiUrl,\n    apiKey\n}","class Api {\n    constructor() {\n        this.imageUrl = \"https://image.tmdb.org/t/p/w500\";\n        this.apiUrl = \"https://api.themoviedb.org\";\n        this.apiKey = \"8e3302447f2ef4cb9470023e800f1f03\";\n        this.headers = { \"Content-Type\": \"application/json\" };\n        this.localStorageName = \"films\";\n    }\n\n    async fetchPopularMovies(page) {\n        try {\n            const response = await fetch(`${this.apiUrl}/3/movie/popular?api_key=${this.apiKey}&language=en-US&page=${page}`, {\n                method: \"GET\",\n                headers: this.headers\n            });\n\n            if (!response.ok) {\n                throw new Error(`Failed with status code: ${response.statusText}`);\n            }\n\n            return await response.json();\n        } catch (error) {\n            console.error(\"Request Error: \", error);\n        }\n    }\n\n    async fetchFilmById(id) {\n        try {\n            const response = await fetch(`${this.apiUrl}/3/movie/${id}?api_key=${this.apiKey}&language=en-US`, {\n                method: \"GET\",\n                headers: this.headers\n            });\n\n            if (!response.ok) {\n                throw new Error(`Failed with status code: ${response.statusText}`);\n            }\n\n            return await response.json();\n        } catch (error) {\n            console.error(\"Request Error: \", error);\n        }\n    }\n\n    async fetchMovies(url) {\n        try {\n            const response = await fetch(url, {\n                method: \"GET\",\n                headers: { \"Content-Type\": \"application/json\" }\n            });\n\n            if (!response.ok) {\n                throw new Error(`Failed with status code: ${response.statusText}`);\n            }\n\n            return await response.json();\n        } catch (error) {\n            console.error(\"Request Error: \", error);\n        }\n    }\n}\n\nexport default new Api();","import { createAction } from \"@reduxjs/toolkit\";\nimport Api from \"src/api/Api\";\n\nexport const toggleTheme = createAction(\"theme/toggleTheme\");\nexport const setMovies = createAction(\"movies/setMovies\");\nexport const setLoadingTrue = createAction(\"loading/true\");\nexport const setLoadingFalse = createAction(\"loading/false\");\nexport const popupClose = createAction(\"popup/close\");\nexport const selectMovie = createAction(\"movie/selectMovie\");\n\nexport const fetchMoviesList = (payload) => async (dispatch) => {\n    dispatch(setLoadingTrue());\n    const responce = await Api.fetchMovies(payload);\n    dispatch(setMovies(responce));\n    dispatch(setLoadingFalse());\n}","import React, { useEffect } from \"react\";\nimport Movie from \"src/components/Movie/Movie\";\nimport Pagination from \"src/components/Pagination/Pagination\";\nimport PopoUp from \"src/components/PopUp/PopUp\";\nimport { apiUrl, apiKey } from \"src/config/config\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { popupClose, selectMovie, fetchMoviesList } from \"src/store/actions\";\nimport { themeSelector, moviesSelector, loadingSelector, selectedMovieSelector } from \"src/store/selectors\";\n\nconst FavouriteMovies = () => {\n    const apiEndPoint = `${apiUrl}/3/movie/popular?api_key=${apiKey}&language=en-US`;\n\n    const dispatch = useDispatch();\n    const theme = useSelector(themeSelector);\n    const movies = useSelector(moviesSelector);\n    const loading = useSelector(loadingSelector);\n    const selectedMovie = useSelector(selectedMovieSelector);\n\n    useEffect(() => {\n        dispatch(fetchMoviesList(`${apiEndPoint}&page=1`));\n    }, []);\n\n    const handleGetMoviesByPage = async (url) => {\n        dispatch(fetchMoviesList(url));\n    }\n\n    const handlePopupClose = () => {\n        dispatch(popupClose());\n    }\n\n    const handleSelectedMovie = (selectedMovie) => {\n        dispatch(selectMovie(selectedMovie))\n    }\n\n    if (loading) {\n        return (\n            <div className={`loader-wrapper theme-${theme}`}>\n                <div className=\"loader\" />\n            </div>\n        );\n    }\n\n    return (\n        <div className={`favorite-movies theme-${theme}`}>\n            <header className=\"site-header\">\n                <h1 className=\"site-title\">Favourite Movies</h1>\n            </header>\n\n            <main className=\"movies\">\n                {\n                    movies.map((movie) => {\n                        return (\n                            <Movie\n                                key={movie.id}\n                                {... { movie }}\n                                openLink={handleSelectedMovie}\n                            />\n                        )\n                    })\n                }\n            </main>\n\n            <Pagination\n                loadHandler={handleGetMoviesByPage}\n                url={apiEndPoint}\n            />\n\n            {\n                selectedMovie && (\n                    <PopoUp\n                        releaseDate={selectedMovie.release_date}\n                        closePopup={handlePopupClose}\n                    />\n                )\n            }\n        </div>\n    )\n}\n\nexport default FavouriteMovies;","import React, { useEffect } from \"react\";\nimport Movie from \"src/components/Movie/Movie\";\nimport PopoUp from \"src/components/PopUp/PopUp\";\nimport Pagination from \"src/components/Pagination/Pagination\";\nimport { apiUrl, apiKey } from \"src/config/config\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loadingSelector, moviesSelector, selectedMovieSelector, themeSelector } from \"src/store/selectors\";\nimport { fetchMoviesList, popupClose, selectMovie } from \"src/store/actions\";\n\nconst TopRatedMovies = () => {\n    const apiEndPoint = `${apiUrl}/3/movie/top_rated?api_key=${apiKey}&language=en-US`;\n\n    const dispatch = useDispatch();\n    const theme = useSelector(themeSelector);\n    const movies = useSelector(moviesSelector);\n    const loading = useSelector(loadingSelector);\n    const selectedMovie = useSelector(selectedMovieSelector);\n\n    useEffect(() => {\n        dispatch(fetchMoviesList(`${apiEndPoint}&page=1`));\n    }, []);\n\n    const handleGetMoviesByPage = async (url) => {\n        dispatch(fetchMoviesList(url));\n    }\n\n    const handlePopupClose = () => {\n        dispatch(popupClose());\n    }\n\n    const handleSelectedMovie = (selectedMovie) => {\n        dispatch(selectMovie(selectedMovie))\n    }\n\n    if (loading) {\n        return (\n            <div className={`loader-wrapper theme-${theme}`}>\n                <div className=\"loader\" />\n            </div>\n        );\n    }\n\n    return (\n        <div className={`top-rated-movies theme-${theme}`}>\n            <header className=\"site-header\">\n                <h1 className=\"site-title\">\n                    Top Rated Movies\n                </h1>\n            </header>\n            <main className=\"movies\">\n                {\n                    movies.map((movie) => {\n                        return (\n                            <Movie\n                                key={movie.id}\n                                {... { movie }}\n                                openLink={handleSelectedMovie}\n                            />\n                        )\n                    })\n                }\n            </main>\n            <Pagination\n                loadHandler={handleGetMoviesByPage}\n                url={apiEndPoint}\n            />\n            {\n                selectedMovie && (\n                    <PopoUp\n                        releaseDate={selectedMovie.release_date}\n                        closePopup={handlePopupClose}\n                    />\n                )\n            }\n        </div>\n\n    )\n}\n\nexport default TopRatedMovies;","import React, { useEffect } from \"react\";\nimport {\n    Redirect,\n} from \"react-router-dom\";\n\nconst TVShows = () => {\n    useEffect(() => {\n        alert(\"This page is under construction\");\n    }, [])\n\n    return (<Redirect to=\"/\" />)\n}\n\nexport default TVShows;","import React from 'react';\n\nexport const iconsConfig = {\n  sun: () => (\n    <svg version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\n      viewBox=\"0 0 512 512\" >\n      <g>\n        <g>\n          <path d=\"M255.996,106c-82.705,0-150,67.295-150,150s67.295,150,150,150s150-67.295,150-150S338.701,106,255.996,106z\" />\n        </g>\n      </g>\n      <g>\n        <g>\n          <path d=\"M411.696,346c-15.6,27.299-38.699,50.099-66,66l90.3,24.3L411.696,346z\" />\n        </g>\n      </g>\n      <g>\n        <g>\n          <path d=\"M255.996,0l-46.199,82.299C224.497,78.1,240.095,76,255.996,76s31.5,2.1,46.2,6.299L255.996,0z\" />\n        </g>\n      </g>\n      <g>\n        <g>\n          <path d=\"M75.996,76l24.3,90c15.601-27.301,38.101-49.801,65.4-65.7L75.996,76z\" />\n        </g>\n      </g>\n      <g>\n        <g>\n          <path d=\"M82.297,209.5l-82,46.5l82,46.5c-4.2-14.7-6.301-30.3-6.301-46.5C75.996,239.799,78.096,224.2,82.297,209.5z\" />\n        </g>\n      </g>\n      <g>\n        <g>\n          <path d=\"M100.296,346l-24.3,90.3l90.3-24.3C138.996,396.099,115.897,373.299,100.296,346z\" />\n        </g>\n      </g>\n      <g>\n        <g>\n          <path d=\"M255.996,436c-16.199,0-31.8-2.1-46.8-6.301l46.8,82.301l46.8-82.301C287.796,433.899,272.195,436,255.996,436z\" />\n        </g>\n      </g>\n      <g>\n        <g>\n          <path d=\"M346.159,100.452c27.14,15.795,49.756,38.43,65.514,65.596l24.426-90.004L346.159,100.452z\" />\n        </g>\n      </g>\n      <g>\n        <g>\n          <path d=\"M511.703,256.146l-81.951-46.39c3.941,14.786,6.244,30.233,6.244,46.244c0,16.135-2.333,31.703-6.334,46.593\n\t\t\tL511.703,256.146z\"/>\n        </g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n    </svg>\n  ),\n  moon: () => (\n    <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\"\n      viewBox=\"0 0 548.087 548.087\"\n    >\n      <g>\n        <g>\n          <path d=\"M189.818,528.559c123.706,52.317,287.13-4.908,339.15-118.961c-83.461,60.649-171.422,71.257-260.773,16.145\n\t\t\tc-78.642-48.507-115.884-123.322-104.367-214.266C178.484,95.743,251.691,31.581,365.833,10.818\n\t\t\tC260.055-22.601,98.724,18.293,36.899,177.213C-10.877,300.041,36.818,463.846,189.818,528.559z\"/>\n          <path d=\"M350.423,116.556l35.565,34.435l-8.197,50.271c-1.257,7.711,3.546,11.465,10.727,8.384l44.048-18.895l44.048,18.895\n\t\t\tc7.181,3.081,11.717-0.624,10.135-8.278l-10.433-50.38l38.106-34.745c5.773-5.263,4.223-10.669-3.464-12.072l-48.111-8.78\n\t\t\tl-23.525-43.313c-3.729-6.866-9.775-6.866-13.505,0l-23.524,43.313l-48.116,8.784C346.49,105.576,344.809,111.117,350.423,116.556\n\t\t\tz\"/>\n          <path d=\"M427.939,323.493l-34.623-6.315l-16.932-31.172c-2.685-4.94-7.034-4.94-9.719,0l-16.932,31.172l-34.619,6.315\n\t\t\tc-5.532,1.008-6.74,4.998-2.701,8.911l25.594,24.781l-5.899,36.178c-0.906,5.549,2.55,8.25,7.72,6.034l31.697-13.595\n\t\t\tl31.697,13.595c5.169,2.216,8.434-0.448,7.291-5.957l-7.507-36.255l27.422-25.002C434.589,328.39,433.471,324.501,427.939,323.493\n\t\t\tz\"/>\n        </g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n      <g>\n      </g>\n    </svg>\n  )\n};\n","import React from 'react';\nimport { iconsConfig } from './iconsConfig';\n\nexport const Icon = ({ name, ...props }) => {\n  const IconC = iconsConfig[name];\n\n  return <IconC {...props} />;\n};\n","import \"./Button.css\";\nexport const Button = ({ Icon, onClick }) => {\n    return (\n        <button className=\"theme-btn\" {...{ onClick }}>\n            {Icon}\n        </button>\n    )\n}","import React from \"react\";\nimport { Icon } from 'src/components/Icons/Icon';\nimport { Button } from \"src/components/Button/Button.js\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { themeSelector } from \"src/store/selectors\";\nimport { toggleTheme } from \"src/store/actions\";\nimport \"./ThemeButton.css\";\n\nconst ThemeButton = () => {\n    const theme = useSelector(themeSelector);\n    const dispatch = useDispatch();\n\n    const handleToggleTheme = () => {\n        dispatch(toggleTheme());\n    }\n\n    return (\n        (theme === 'light') ?\n            <Button onClick={handleToggleTheme}\n                Icon={<Icon name=\"moon\" size=\"16px\" />}\n            /> :\n            <Button onClick={handleToggleTheme}\n                Icon={<Icon name=\"sun\" size=\"16px\" />}\n            />\n    )\n}\n\nexport default ThemeButton;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ThemeButton from \"../ThemeButton/ThemeButton\";\nimport \"./NavBar.css\";\n\nexport const NavBar = () => {\n    return (\n        <div className=\"nav-bar\">\n\n            <ul className=\"nav-list\">\n                <li>\n                    <Link to=\"/\">Home</Link>\n                </li>\n                <li>\n                    <Link to=\"/top-rated\">Top Rated</Link>\n                </li>\n                <li>\n                    <Link to=\"/tv-shows\">TVShows</Link>\n                </li>\n            </ul>\n            <ThemeButton />\n        </div>\n\n    )\n}","import React from \"react\";\nimport FavouriteMovies from \"src/pages/FavouriteMovies/FavouriteMovies\";\nimport TopRatedMovies from \"src/pages/TopRatedMovies/TopRatedMovies\";\nimport TVShows from \"src/pages/TVShows/TVShows\";\nimport { NavBar } from \"src/components/NavBar/NavBar\";\nimport { useSelector } from \"react-redux\";\nimport { themeSelector } from \"src/store/selectors\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport \"./App.css\";\n\n\nexport const ThemeContext = React.createContext(\"light\");\nexport const ThemeContextProvider = ThemeContext.Provider;\n\nconst App = () => {\n  const theme = useSelector(themeSelector);\n\n  return (\n    <Router basename=\"/the-movies\">\n      <div className={`App theme-${theme}`}>\n        <div className=\"container\">\n          <NavBar />\n          <Switch>\n            <Route exact path=\"/\">\n              <FavouriteMovies />\n            </Route>\n            <Route path=\"/top-rated\">\n              <TopRatedMovies />\n            </Route>\n            <Route path=\"/tv-shows\">\n              <TVShows />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  )\n}\n\nexport default App;\n","export const initialState = {\n    loading: true,\n    movies: [],\n    currentPage: null,\n    total: null,\n    theme: \"light\",\n    selectedMovie: null,\n}","import { createReducer } from \"@reduxjs/toolkit\";\nimport { initialState } from \"src/store/initialState\";\nimport { toggleTheme, setMovies, setLoadingTrue, setLoadingFalse, popupClose, selectMovie } from \"src/store/actions\";\n\nexport const reducer = createReducer(initialState, {\n    [toggleTheme]: (state, action) => {\n        state.theme = (state.theme === \"light\") ? \"dark\" : \"light\";\n    },\n    [setLoadingTrue]: (state, actions) => {\n        state.loading = true;\n    },\n    [setLoadingFalse]: (state, actions) => {\n        state.loading = false;\n    },\n    [setMovies]: (state, action) => {\n        state.movies = action.payload.results;\n        state.total = action.payload.total_pages;\n        state.currentPage = action.payload.page;\n    },\n    [popupClose]: (state, action) => {\n        state.selectedMovie = null;\n    },\n    [selectMovie]: (state, action) => {\n        state.selectedMovie = action.payload;\n    }\n});","import { configureStore } from \"@reduxjs/toolkit\";\nimport { initialState } from \"./initialState\";\nimport { reducer } from \"./reducer\";\n\nexport const store = configureStore({\n    reducer: reducer,\n    preloadedState: initialState\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport { Provider } from \"react-redux\";\nimport { store } from \"src/store/store\";\nimport \"./styles/styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}